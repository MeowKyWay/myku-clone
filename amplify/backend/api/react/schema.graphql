# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules

type AuthorizationToken
  @model
  @aws_cognito_user_pools
  @auth(
    rules: [
      { allow: groups, groupsField: "group", operations: [read] }
    ]
  ) {
    id: ID!
    token: String!
    group: String! #specify the group token
}

type Faculty
  @model
  @aws_cognito_user_pools
  @auth(
    rules: [
      { allow: groups, groups: ["Admin"] }
      { allow: private, operations: [read]}
    ]
  ) {
  id: ID!
  name: String!

  departments: [Department] @hasMany(indexName: "faculty", fields: ["id"]) #faculty has many departments
}

type Department
  @model
  @aws_cognito_user_pools
  @auth(
    rules: [
      { allow: groups, groups: ["Admin"]}
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  name: String!

  facultyID: ID! @index(name: "faculty") #faculty has many departments
  faculty: Faculty @belongsTo(fields: ["facultyID"])

  subjects: [Subject] @hasMany(indexName: "department", fields: ["id"]) 
  #department has many subjects
}

type Subject
  @model
  @aws_cognito_user_pools
  @auth(
    rules: [
      { allow: groups, groups: ["Admin"] }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  name: String!
  credit: Int!

  departmentID: ID! @index(name: "department") #department has many subjects
  department: Department @belongsTo(fields: ["departmentID"])

  sections: [Section] 
    @hasMany(indexName: "subject", fields: ["id"])
    @auth(rules: [
      { allow: groups, groups: ["Admin"] }
      { allow: groups, groups: ["Teacher"], operations: [update] }
      { allow: private, operations: [read] }
      ])
}

type Section
@model
@aws_cognito_user_pools
@auth(
  rules: [
    { allow: groups, groups: ["Admin"] }
    { allow: groups, groups: ["Teacher"], operations: [create] }
    { allow: owner, ownerField: "teacher", operations: [update, delete]}
    { allow: private, operations: [read] }
  ]
) {
  id: ID!
  name: String!
  capacity: Int!

  teacher: String!

  subjectID: ID! @index(name: "subject") #subject has many sections
  subject: Subject @belongsTo(fields: ["subjectID"])
}