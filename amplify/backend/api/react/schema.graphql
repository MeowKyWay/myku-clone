# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules

enum Status {
  GRADUATE
  RETIRED
  CURRENT
}

type AuthorizationToken
  @model
  @aws_cognito_user_pools
  @auth(
    rules: [
      { allow: groups, groupsField: "group", provider: userPools, operations: [read] }
    ]
  ) {
    id: ID!
    token: String!
    group: String! #specify the group token
  }

type Faculty
  @model
  @aws_api_key
  @aws_cognito_user_pools
  @auth(
    rules: [
      { allow: public, provider: apiKey, operations: [read] }
      { allow: groups, provider: userPools, groups: ["Admin"] }
    ]
  ) {
  id: ID!
  name: String!

  departments: [Department] @hasMany(indexName: "faculty", fields: ["id"]) #faculty has many departments
}

type Department
  @model
  @aws_api_key
  @aws_cognito_user_pools
  @auth(
    rules: [
      { allow: public, provider: apiKey, operations: [read] }
      { allow: groups, provider: userPools, groups: ["Admin"] }
    ]
  ) {
  id: ID!
  name: String!

  facultyID: ID! @index(name: "faculty") #faculty has many departments
  faculty: Faculty @belongsTo(fields: ["facultyID"])

  subjects: [Subject] @hasMany(indexName: "department", fields: ["id"]) #department has many subjects
}

type Subject
  @model
  @aws_api_key
  @aws_cognito_user_pools
  @auth(
    rules: [
      { allow: public, provider: apiKey, operations: [read] }
      { allow: groups, provider: userPools, groups: ["Admin"], operations: [delete] }
      { allow: owner, ownerField: "teacher", provider: userPools}
    ]
  ) {
    id: ID!
    name: String!

    teacher: String! #owner

    departmentID: ID! @index(name: "department") #department has many subjects
    department: Department @belongsTo(fields: ["departmentID"])
  }